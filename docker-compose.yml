version: '3.6'
services:
  # Modeler Component in Angular (this is a static build served with nginx)
  adamo-frontend-application:
    container_name: adamo-frontend-server
    build: ./adamo-frontend-application
    image: adamo-application/latest
    ports:
      - '${APP_PORT}:80'

  # MQTT Broker for realtime data exchange
  adamo-mqtt-server:
    container_name: adamo-mqtt-server
    build: ./adamo-mqtt-server
    ports:
      - '1883:1883'
      - '4711:4711'
    env_file:
      - .env
    command: ['npm', 'run', 'start']

  # Nest Backend Server
  adamo-nest-server:
    container_name: adamo-nest-server
    build: ./adamo-nest-server
    env_file:
      - .env
    ports:
      - '${SERVER_PORT:-3330}:${SERVER_PORT:-3330}'
    command: ['npm', 'run', 'start:dev']
    depends_on:
      - adamo-postgres-database

    links:
      - adamo-postgres-database
    networks:
      - backend

  # Postgres Database
  adamo-postgres-database:

    image: postgres
    container_name: adamo-postgres
    # image: postgres:alpine
    restart: always
    # build: ./adamo-postgres-database
    env_file: .env
    #    # image: postgres:${POSTGRES_IMAGE_VERSION}
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE:-adamo}
      POSTGRES_USER:  ${POSTGRES_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES:HOST: ${POSTGRES_HOST:-postgres}
      PGDATA: /data/postgres
    networks:
      - backend
    ports:
      - '5432:5432'
    volumes:
      - adamo-pgdata:/var/lib/postgresql/data
    # volumes:
    #   - adamo-postgres:/data/postgres

  pgadmin:
    container_name: adamo-pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
        - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - backend
    restart: unless-stopped

  # camunda-engine: 
  #   container_name: camunda-engine
  #   image: camunda/camunda-bpm-platform
  #   ports: 
  #     - '8051:8080'
  #   environment:
  #     DB_DRIVER: com.mysql.jdbc.driver
  #     DB_URL: jdbc:mysql://mysql-db:3306/camunda_db?autoReconnect=true
  #     DB_USERNAME: root
  #     DB_PASSWORD: root
  #   depends_on: 
  #     - 'mysql-db'

  # mysql-db:
  #   image: mysql:latest
  #   container_name: camunda_mysql
  #   ports: 
  #     - '8050:3306'
  #   environment: 
  #     - MYSQL_ROOT_PASSWORD: root
  #     - MYSQL_USER: root
  #     - MYSQL_DATABASE: camunda_db

# Docker for windows gives you wrong ownership on local used volumes
# docker volume create --name=adamo-pgdata
volumes:
  pgadmin:
  adamo-pgdata:
    external: true


networks:
  backend:
    driver: bridge